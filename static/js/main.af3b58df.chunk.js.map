{"version":3,"sources":["App/logo.svg","Login/Login.tsx","Profile/Profile.tsx","App/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","web3","undefined","Login","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","loading","handleAuthenticate","_ref","publicAddress","signature","fetch","process","body","JSON","stringify","headers","Content-Type","method","then","response","json","handleClick","asyncToGenerator","regenerator_default","a","mark","_callee","onLoggedIn","coinbase","wrap","_context","prev","next","props","window","ethereum","alert","abrupt","enable","Web3","t0","eth","getCoinbase","sent","toLowerCase","setState","users","handleSignup","handleSignMessage","catch","err","stop","_ref4","_callee2","_ref3","nonce","_context2","personal","sign","Error","_x","inherits","createClass","key","value","react","className","onClick","disabled","React","jwtDecode","require","Profile","user","username","handleChange","target","handleSubmit","accessToken","auth","_this$state","id","Authorization","_this2","payload","_this$props","onLoggedOut","_this$state2","dist_main_default","seed","htmlFor","name","onChange","LS_KEY","App","handleLoggedIn","localStorage","setItem","handleLoggedOut","removeItem","ls","getItem","parse","src","logo","alt","Profile_Profile_Profile","Login_Login_Login","dotEnvConfig","path","ReactDOM","App_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.af3b58df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport Web3 from 'web3';\n\nimport { Auth } from '../types';\nimport './Login.css';\n\ninterface Props {\n  onLoggedIn: (auth: Auth) => void;\n}\n\nlet web3: Web3 | undefined = undefined; // Will hold the web3 instance\n\nexport class Login extends React.Component<Props> {\n  state = {\n    loading: false // Loading button state\n  };\n\n  handleAuthenticate = ({\n    publicAddress,\n    signature\n  }: {\n    publicAddress: string;\n    signature: string;\n  }) =>\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/auth`, {\n      body: JSON.stringify({ publicAddress, signature }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then(response => response.json());\n\n  handleClick = async () => {\n    const { onLoggedIn } = this.props;\n\n    // Check if MetaMask is installed\n    if (!(window as any).ethereum) {\n      window.alert('Please install MetaMask first.');\n      return;\n    }\n\n    if (!web3) {\n      try {\n        // Request account access if needed\n        await (window as any).ethereum.enable();\n\n        // We don't know window.web3 version, so we use our own instance of Web3\n        // with the injected provider given by MetaMask\n        web3 = new Web3((window as any).ethereum);\n      } catch (error) {\n        window.alert('You need to allow MetaMask.');\n        return;\n      }\n    }\n\n    const coinbase = await web3.eth.getCoinbase();\n    if (!coinbase) {\n      window.alert('Please activate MetaMask first.');\n      return;\n    }\n\n    const publicAddress = coinbase.toLowerCase();\n    this.setState({ loading: true });\n\n    // Look if user with current publicAddress is already present on backend\n    fetch(\n      `${\n        process.env.REACT_APP_BACKEND_URL\n      }/users?publicAddress=${publicAddress}`\n    )\n      .then(response => response.json())\n      // If yes, retrieve it. If no, create it.\n      .then(users =>\n        users.length ? users[0] : this.handleSignup(publicAddress)\n      )\n      // Popup MetaMask confirmation modal to sign message\n      .then(this.handleSignMessage)\n      // Send signature to backend on the /auth route\n      .then(this.handleAuthenticate)\n      // Pass accessToken back to parent component (to save it in localStorage)\n      .then(onLoggedIn)\n      .catch(err => {\n        window.alert(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  handleSignMessage = async ({\n    publicAddress,\n    nonce\n  }: {\n    publicAddress: string;\n    nonce: string;\n  }) => {\n    try {\n      const signature = await web3!.eth.personal.sign(\n        `I am signing my one-time nonce: ${nonce}`,\n        publicAddress,\n        '' // MetaMask will ignore the password argument here\n      );\n\n      return { publicAddress, signature };\n    } catch (err) {\n      throw new Error('You need to sign the message to be able to log in.');\n    }\n  };\n\n  handleSignup = (publicAddress: string) => {\n    return fetch(`${process.env.REACT_APP_BACKEND_URL}/users`, {\n      body: JSON.stringify({ publicAddress }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }).then(response => response.json());\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <p>\n          Please select your login method.\n          <br />\n          For the purpose of this demo, only MetaMask login is implemented.\n        </p>\n        <button className=\"Login-button Login-mm\" onClick={this.handleClick}>\n          {loading ? 'Loading...' : 'Login with MetaMask'}\n        </button>\n        <button className=\"Login-button Login-fb\" disabled>\n          Login with Facebook\n        </button>\n        <button className=\"Login-button Login-email\" disabled>\n          Login with Email\n        </button>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport Blockies from 'react-blockies';\n\nimport { Auth } from '../types';\nimport './Profile.css';\n\nconst jwtDecode = require('jwt-decode');\n\ninterface Props {\n  auth: Auth;\n  onLoggedOut: () => void;\n}\n\ninterface State {\n  loading: boolean;\n  user?: {\n    id: number;\n    username: string;\n  };\n  username: string;\n}\n\nexport class Profile extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    user: undefined,\n    username: ''\n  };\n\n  componentDidMount() {\n    const {\n      auth: { accessToken }\n    } = this.props;\n    const {\n      payload: { id }\n    } = jwtDecode(accessToken);\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${id}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    })\n      .then(response => response.json())\n      .then(user => this.setState({ user }))\n      .catch(window.alert);\n  }\n\n  handleChange = ({\n    target: { value }\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ username: value });\n  };\n\n  handleSubmit = () => {\n    const {\n      auth: { accessToken }\n    } = this.props;\n    const { user, username } = this.state;\n\n    this.setState({ loading: true });\n\n    if (!user) {\n      window.alert(\n        'The user id has not been fetched yet. Please try again in 5 seconds.'\n      );\n      return;\n    }\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${user.id}`, {\n      body: JSON.stringify({ username }),\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH'\n    })\n      .then(response => response.json())\n      .then(user => this.setState({ loading: false, user }))\n      .catch(err => {\n        window.alert(err);\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    const {\n      auth: { accessToken },\n      onLoggedOut\n    } = this.props;\n    const {\n      payload: { publicAddress }\n    } = jwtDecode(accessToken);\n    const { loading, user } = this.state;\n\n    const username = user && user.username;\n\n    return (\n      <div className=\"Profile\">\n        <p>\n          Logged in as <Blockies seed={publicAddress} />\n        </p>\n        <div>\n          My username is {username ? <pre>{username}</pre> : 'not set.'} My\n          publicAddress is <pre>{publicAddress}</pre>\n        </div>\n        <div>\n          <label htmlFor=\"username\">Change username: </label>\n          <input name=\"username\" onChange={this.handleChange} />\n          <button disabled={loading} onClick={this.handleSubmit}>\n            Submit\n          </button>\n        </div>\n        <p>\n          <button onClick={onLoggedOut}>Logout</button>\n        </p>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { Login } from '../Login';\nimport logo from './logo.svg';\nimport { Profile } from '../Profile/Profile';\nimport { Auth } from '../types';\nimport './App.css';\n\nconst LS_KEY = 'login-with-metamask:auth';\n\ninterface State {\n  auth?: Auth;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {};\n\n  componentDidMount() {\n    // Access token is stored in localstorage\n    const ls = window.localStorage.getItem(LS_KEY);\n    const auth = ls && JSON.parse(ls);\n    this.setState({\n      auth\n    });\n  }\n\n  handleLoggedIn = (auth: Auth) => {\n    localStorage.setItem(LS_KEY, JSON.stringify(auth));\n    this.setState({ auth });\n  };\n\n  handleLoggedOut = () => {\n    localStorage.removeItem(LS_KEY);\n    this.setState({ auth: undefined });\n  };\n\n  render() {\n    const { auth } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to Login with MetaMask Demo</h1>\n        </header>\n        <div className=\"App-intro\">\n          {auth ? (\n            <Profile auth={auth} onLoggedOut={this.handleLoggedOut} />\n          ) : (\n            <Login onLoggedIn={this.handleLoggedIn} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { config as dotEnvConfig } from 'dotenv';\n\nimport './index.css';\nimport { App } from './App';\n\n// Load ENV variables\ndotEnvConfig({\n  path:\n    process.env.NODE_ENV === 'production'\n      ? '.env.production'\n      : '.env.development'\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}